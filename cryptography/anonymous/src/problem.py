from Crypto.Util.number import bytes_to_long
from sage.all import *
from FLAG import flag
from Crypto.Util.number import bytes_to_long

def crypto():
    p= 1727252033904174334846497507780328218112467726681054013200524406716221061023358280347395639869309464744762734674078249821655448592760317955020382603347044698769
    a = 0
    b= 431813008476043583711624376945082054528116931670263503300131101679055265255839570086848909967327366186190683668519562455413862148190079488755095650836761174695

    m  = bytes_to_long(flag())

    assert m<p

    E = EllipticCurve(GF(p), [a,b])
    P = E.gen(0)
    Q =m*P
    print(p,a,b)
    print(P,Q)

if __name__=="__main__":
    crypto()