from Crypto.Cipher import AES
from Crypto.Util import Counter
from Crypto.Util.number import * 
import os
import sys
import base64

seed = sys.argv[1][0].encode()
# seed = b"g"

def lfsr(seed):
    out = []
    for i in range(2 ** 7):
        bit = (seed >> 6) & 0x01
        if (bit == 1):
            seed = (seed << 1) ^ 0b11100011
        else:
            seed = (seed << 1)
        out.append(str(bit))
    out= "".join(out)
    out = int(out, 2)
    out = long_to_bytes(out)
    return out

def decrypt(ct, key):
    cipher = AES.new(key, AES.MODE_CTR, counter=Counter.new(128))
    dt = cipher.decrypt(ct)
    return dt

def read():
    with open(sys.argv[1], "rb") as f:
        pt = f.read()
    return pt

def write(ct):
    with open(sys.argv[1].replace(".hogehoge", ""), "wb") as fw:
        fw.write(ct)

def main():
    key = lfsr(bytes_to_long(seed))
    ct = read()
    pt = decrypt(ct, key)
    write(pt)

if __name__ == "__main__":
    main()
