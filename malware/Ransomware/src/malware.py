from Crypto.Cipher import AES
from Crypto.Util import Counter
from Crypto.Util.number import * 
import sys

seed = sys.argv[1][0].encode()

def m_seq(seed):
    out = []
    for i in range(2 ** 7):
        bit = (seed >> 6) & 0x01
        if (bit == 1):
            seed = (seed << 1) ^ 0b11100011
        else:
            seed = (seed << 1)
        out.append(str(bit))
    out = long_to_bytes(int("".join(out), 2))
    return out

def encrypt(pt, key):
    plain = AES.new(key, AES.MODE_CTR, counter=Counter.new(128))
    ct = plain.encrypt(pt)
    return ct

def read():
    with open(sys.argv[1], "rb") as f:
        pt = f.read()
    return pt

def write(ct):
    with open(sys.argv[1] + ".hogehoge", "wb") as fw:
        fw.write(ct)

def main():
    key = m_seq(bytes_to_long(seed))
    pt = read()
    ct = encrypt(pt, key)
    write(ct)

if __name__ == "__main__":
    main()
